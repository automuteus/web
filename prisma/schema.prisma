generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)


  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  guilds        GuildsOnUsers[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime


  @@unique([identifier, token])
  @@map("verification_requests")
}

model Guild {
  name          String          @db.VarChar(100)
  icon          String?         @db.Text
  premium       Int             @db.SmallInt
  txn_time_unix Int?            @db.Integer
  guild_id      String          @id @unique
  last_updated  DateTime?       @default(now()) @db.Timestamp(6)
  users         GuildsOnUsers[]

  @@map("guilds")
}

model GuildsOnUsers {
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  guild       Guild    @relation(fields: [guildId], references: [guild_id])
  guildId     String
  active      Boolean? @db.Boolean
  permissions String?  @db.VarChar(32)


  @@id([userId, guildId])
  @@map("users_guilds")
}
